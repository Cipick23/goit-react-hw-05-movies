{"version":3,"file":"static/js/541.258efdcd.chunk.js","mappings":"8PACA,GAAiB,ECoBjB,EArBqB,SAAAA,GAUnB,OAAOC,MAAM,sCAADC,OAC4BF,EAAE,kCAV1B,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAQHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCC,OAAM,SAAAC,GAEL,MADAC,QAAQC,MAAM,wCAADX,OAAyCF,GAAMW,GACtDA,CACR,GACJ,E,SC0CA,EArDqB,SAAHG,GAAkBA,EAAZC,aAAoB,IAC1CC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/Bb,EAAKc,EAAA,GAAEC,EAAQD,EAAA,GACd3B,GAAO6B,EAAAA,EAAAA,MAAP7B,GAkBR,OAhBA8B,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAUvB,OAVuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAA1B,EAAA,OAAAyB,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEuB,OAFvBF,EAAAC,KAAA,EAEIX,GAAa,GAAMU,EAAAE,KAAA,EACIC,EAAgBtC,GAAI,KAAD,EAApCQ,EAAQ2B,EAAAI,KACdlB,EAAWb,EAASgC,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE7BP,EAAS,qDAAqD,QAE1C,OAF0CO,EAAAC,KAAA,GAE9DX,GAAa,GAAOU,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAT,EAAA,yBAEvBU,MAAA,KAAAC,UAAA,EAXc,WACSd,EAAAa,MAAC,KAADC,UAAA,CAYxBC,EACF,GAAG,CAAC9C,IAEAwB,GACKuB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAGZnC,GAASA,EAAMoC,OAAS,GACnBF,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,QAAStC,KAIvBuC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,iBAAwBC,SAAA,EACtCR,EAAAA,EAAAA,KAAA,MAAIM,UAAWC,EAAAA,aAAoBC,SAAC,YACnCnC,EAAQ6B,OAAS,GAChBF,EAAAA,EAAAA,KAAA,MAAIM,UAAWC,EAAAA,WAAkBC,SAC9BnC,EAAQoC,KAAI,SAAAC,GAAM,OACjBL,EAAAA,EAAAA,MAAA,MAAoBC,UAAWC,EAAAA,WAAkBC,SAAA,EAC/CR,EAAAA,EAAAA,KAAA,MAAAQ,SAAKE,EAAOC,UACZX,EAAAA,EAAAA,KAAA,KAAAQ,SAAIE,EAAOE,YAFJF,EAAOzD,GAGX,OAIT+C,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,UAAiBC,SAAC,2BAIxC,C","sources":["pages/movies/movieDetails/reviews/MovieReviews.module.css","services/movieReviews.js","pages/movies/movieDetails/reviews/MovieReviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","const movieReviews = id => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MmZiNGNlMzE4ZWEyMzFmODJjN2Y3MTc5NmFhM2M2ZSIsInN1YiI6IjY1NzBkZjkyZGQ3MzFiMDBhYjk2Nzc0NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.F4GA0UkBmMTH3hTtFSbrMrSBqudmtfgqt4w1tmAKyIU',\n    },\n  };\n\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  )\n    .then(response => response.json())\n    .catch(err => {\n      console.error(`Error fetching movie details for ID: ${id}`, err);\n      throw err;\n    });\n};\n\nexport default movieReviews;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/common/loader/Loader';\nimport Error from 'components/common/Error/Error';\nimport styles from './MovieReviews.module.css';\nimport getMovieReviews from 'services/movieReviews';\nimport PropTypes from 'prop-types';\n\nconst MovieReviews = ({ movieDetails }) => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const response = await getMovieReviews(id);\n        setReviews(response.results);\n      } catch (error) {\n        setError('An error occurred while retrieving movie reviews.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [id]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (error && error.length > 0) {\n    return <Error message={error} />;\n  }\n\n  return (\n    <div className={styles.reviewsContainer}>\n      <h2 className={styles.reviewsTitle}>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul className={styles.reviewList}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.reviewItem}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={styles.noReviews}>No reviews available</p>\n      )}\n    </div>\n  );\n};\n\nMovieReviews.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n};\n\nexport default MovieReviews;\n"],"names":["id","fetch","concat","method","headers","accept","Authorization","then","response","json","catch","err","console","error","_ref","movieDetails","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","useParams","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","getMovieReviews","sent","results","t0","finish","stop","apply","arguments","fetchData","_jsx","Loader","length","Error","message","_jsxs","className","styles","children","map","review","author","content"],"sourceRoot":""}